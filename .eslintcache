[{"/Users/andrew.b.truong/Development/not-microsoft-paint/src/index.js":"1","/Users/andrew.b.truong/Development/not-microsoft-paint/src/App.js":"2","/Users/andrew.b.truong/Development/not-microsoft-paint/src/reportWebVitals.js":"3","/Users/andrew.b.truong/Development/not-microsoft-paint/src/Palette.js":"4","/Users/andrew.b.truong/Development/not-microsoft-paint/src/constants.js":"5","/Users/andrew.b.truong/Development/not-microsoft-paint/src/canvas.js":"6","/Users/andrew.b.truong/Development/not-microsoft-paint/src/state.js":"7","/Users/andrew.b.truong/Development/not-microsoft-paint/src/Shape.js":"8","/Users/andrew.b.truong/Development/not-microsoft-paint/src/Rectangle.js":"9","/Users/andrew.b.truong/Development/not-microsoft-paint/src/Circle.js":"10","/Users/andrew.b.truong/Development/not-microsoft-paint/src/PropertiesPanel.js":"11"},{"size":481,"mtime":1608251886869,"results":"12","hashOfConfig":"13"},{"size":618,"mtime":1608535997409,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607034561629,"results":"15","hashOfConfig":"13"},{"size":2181,"mtime":1610573787719,"results":"16","hashOfConfig":"13"},{"size":514,"mtime":1608258291887,"results":"17","hashOfConfig":"13"},{"size":2806,"mtime":1608536017291,"results":"18","hashOfConfig":"13"},{"size":4967,"mtime":1608255246944,"results":"19","hashOfConfig":"13"},{"size":725,"mtime":1608252946941,"results":"20","hashOfConfig":"13"},{"size":2019,"mtime":1608251590565,"results":"21","hashOfConfig":"13"},{"size":1879,"mtime":1608255287329,"results":"22","hashOfConfig":"13"},{"size":1379,"mtime":1608670127495,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13oiuto",{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/andrew.b.truong/Development/not-microsoft-paint/src/index.js",[],["50","51"],"/Users/andrew.b.truong/Development/not-microsoft-paint/src/App.js",["52","53","54","55","56"],"import React from \"react\";\n\nimport { Palette } from \"./Palette\";\nimport { Canvas } from \"./canvas\";\nimport { PropertiesPanel } from \"./PropertiesPanel\";\n\nimport { render } from 'react-dom';\nimport { Stage, Layer, Line, Text } from 'react-konva';\n\n/* \nPalette component is where the library of shapes the user can chose from\nCanvas is where the shapes can be dragged on\nPropertiesPanel will have the options where users can change what the shapes look like \n*/\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n      <Palette />\n      <Canvas />\n      <PropertiesPanel />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","/Users/andrew.b.truong/Development/not-microsoft-paint/src/reportWebVitals.js",[],["57","58"],"/Users/andrew.b.truong/Development/not-microsoft-paint/src/Palette.js",[],"/Users/andrew.b.truong/Development/not-microsoft-paint/src/constants.js",[],"/Users/andrew.b.truong/Development/not-microsoft-paint/src/canvas.js",["59"],"import React, { useCallback, useRef } from 'react'; \nimport { Layer, Stage }  from \"react-konva\"; \n\nimport { \n  useShapes, \n  createCircle, \n  createRectangle, \n  reset,\n  saveDiagram, \n  clearSelection, \n} from \"./state\"; \nimport { DRAG_DATA_KEY, SHAPE_TYPES} from './constants'; \nimport { Shape } from './Shape';\n\nconst handleDragOver = (event) => event.preventDefault(); \n\n/* \nwe have already set up shapes to be draggable in palette, so here we need allow\nshapes to be dropped and added to the canvas component. \n\nTo handle the drop of the shape, we have to attach an onDrop event listener\n*/\n\nexport function Canvas() { \n\n  const shapes = useShapes((state) => Object.entries(state.shapes)); \n  const stageRef = useRef(); \n\n  /* \n  We handle the addition on shapes to the state in handleDrop handle function\n  We access the type of the shape dragged by acesssing the DRAG_DATA_KEY payload\n  value on the 'dataTransfer' attribute of the nativeEvent. \n  */\n\n  const handleDrop = useCallback((event) => {\n    const draggedData = event.nativeEvent.dataTransfer.getData(DRAG_DATA_KEY); \n\n    if (draggedData) { \n      const {offsetX, offsetY, type, clientHeight, clientWidth } = JSON.parse(\n        draggedData\n      );\n      \n      /* setPointer, getPointer allows us to get the local coordinates of the \n      canvas component  */\n\n      stageRef.current.setPointersPositions(event); \n      \n      const coords = stageRef.current.getPointerPosition(); \n\n      /* \n      Based on the type dragged, we call the createRectangle or createCircle \n      state updater function, in state.js to update the global state. \n\n      here the true coordinates are calculate and is dependent on: \n      1. where the user clicked/dragged the shape in the palette component\n      2. where the user dropped the shape in the canvas\n      */\n      if (type === SHAPE_TYPES.RECT) {\n        // rectange x, y is at the top, left corner \n        createRectangle({\n          x: coords.x - offsetX,\n          y: coords.y - offsetY,\n        });\n      } else if (type === SHAPE_TYPES.CIRCLE) {\n        // circle x,y is at the centre of the circle\n        createCircle({\n          x: coords.x - (offsetX - clientWidth / 2),\n          y: coords.y - (offsetY - clientHeight / 2),\n        });\n      }\n    }\n  }, []);\n\n  return ( \n    <main className=\"canvas\" onDrop={handleDrop} onDragOver={handleDragOver}>\n      <div className=\"buttons\">\n        <button onClick={reset}>Reset</button>\n      </div>\n      <Stage\n        ref={stageRef}\n        width={window.innerWidth - 400 } \n        height={window.innerHeight}\n        onClick={clearSelection}\n      >\n        <Layer>\n          {shapes.map(([key, shape]) => (\n            <Shape key={key} shape={{ ...shape, id: key}} />\n          ))}\n        </Layer>\n      </Stage>\n    </main>\n  )\n}","/Users/andrew.b.truong/Development/not-microsoft-paint/src/state.js",[],"/Users/andrew.b.truong/Development/not-microsoft-paint/src/Shape.js",[],"/Users/andrew.b.truong/Development/not-microsoft-paint/src/Rectangle.js",[],"/Users/andrew.b.truong/Development/not-microsoft-paint/src/Circle.js",[],"/Users/andrew.b.truong/Development/not-microsoft-paint/src/PropertiesPanel.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":7,"column":10,"nodeType":"66","messageId":"67","endLine":7,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":8,"column":10,"nodeType":"66","messageId":"67","endLine":8,"endColumn":15},{"ruleId":"64","severity":1,"message":"69","line":8,"column":17,"nodeType":"66","messageId":"67","endLine":8,"endColumn":22},{"ruleId":"64","severity":1,"message":"70","line":8,"column":24,"nodeType":"66","messageId":"67","endLine":8,"endColumn":28},{"ruleId":"64","severity":1,"message":"71","line":8,"column":30,"nodeType":"66","messageId":"67","endLine":8,"endColumn":34},{"ruleId":"60","replacedBy":"72"},{"ruleId":"62","replacedBy":"73"},{"ruleId":"64","severity":1,"message":"74","line":9,"column":3,"nodeType":"66","messageId":"67","endLine":9,"endColumn":14},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Stage' is defined but never used.","'Layer' is defined but never used.","'Line' is defined but never used.","'Text' is defined but never used.",["75"],["76"],"'saveDiagram' is defined but never used.","no-global-assign","no-unsafe-negation"]